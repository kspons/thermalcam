#! /usr/bin/python
import rospy
from sensor_msgs.msg import Image
from sensor_msgs.msg import NavSatFix
from cv_bridge import CvBridge, CvBridgeError
import cv2
import numpy as np
import os
from datetime import datetime
import time
bridge = CvBridge()
from shutil import copyfile
import subprocess

def ptg_callback(msg):
    try:
        # Convert your ROS Image message to OpenCV2
        cv2_img = bridge.imgmsg_to_cv2(msg, "mono8")
    except CvBridgeError, e:
        print(e)
    else:
        # The camera is mounted upside-down, so rotate the img 180 degrees
        cv2_img = np.rot90(cv2_img, 2)
        # Save your OpenCV2 image as a jpeg 
        imagename = str(rospy.get_rostime()) + '.jpeg'
        cv2.imwrite(imagename, cv2_img)

def main():
    rospy.init_node('ptg_saver')
    rospy.Subscriber("/camera/image_raw", Image, ptg_callback)
    rospy.spin()

if __name__ == '__main__':
    timevar = str(datetime.now().strftime("%m-%d_%H:%M:%S"))
    mypath = os.path.join("/home/kspons/Pictures/ptg_imgs", timevar)
    os.makedirs(mypath)
    os.chdir(mypath)
    mystring = "\nImages are being saved at " + mypath + "\nPress Ctrl+C to exit"
    print(mystring)
    start = time.time()
    main()

def make_video():
	copyfile('/home/kspons/Desktop/Run/make_video', mypath+'/make_video')
	subprocess.call(["chmod", "+x", mypath+'/make_video'])
	print '\n'
	
rospy.on_shutdown(make_video)
