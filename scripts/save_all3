#! /usr/bin/python
import rospy
from sensor_msgs.msg import Image
from sensor_msgs.msg import NavSatFix
from cv_bridge import CvBridge, CvBridgeError
import cv2
import os
from datetime import datetime
import time
import numpy as np
bridge = CvBridge()
from shutil import copyfile
import subprocess

class Position():
    Lat = "0"
    Long = "0"
    Alt = "0"

def ptg_callback(msg):
    try:
        # Convert your ROS Image message to OpenCV2
        cv2_img = bridge.imgmsg_to_cv2(msg, "mono8")
    except CvBridgeError, e:
        print(e)
    else:
        # The camera is mounted upside-down, so rotate the img 180 degrees
        cv2_img = np.rot90(cv2_img, 2)
        # Save your OpenCV2 image as a jpeg 
        imagename = str(rospy.get_rostime()) + '.jpeg'
        cv2.imwrite(imagename, cv2_img)

def therm_callback(msg):
	try:
		thm_img = bridge.imgmsg_to_cv2(msg, "mono8")
	except CvBridgeError, e:
		print(e)
	else:
		imagename_thm = 'thermal/' + str(rospy.get_rostime()) + '.jpeg'
		cv2.imwrite(imagename_thm, thm_img)

def gps_callback(msg):
    msg_str = str(msg)
    lat = msg_str.find("latitude: ")
    lon = msg_str.find("longitude: ")
    for item in msg_str.split("\n"):
        if "latitude: " in item:
            #print item.strip()
            Position.Lat = item.partition(": ")[2]
            #print(latitude)
        elif "longitude: " in item:
            #print item.strip()
            Position.Long = item.partition(" ")[2]
	with open('GPSlog.txt', 'a') as gpslog:
		gpslog.write('\nROS time: ' + str(rospy.get_rostime()) + '\n')
		gpslog.write(str(msg))

def main():
    rospy.init_node('save_images_and_GPS')
    rospy.Subscriber("/camera/image_raw", Image, ptg_callback)
    rospy.Subscriber("/thermalcam/image_raw", Image, therm_callback)
    rospy.Subscriber("/mavros/global_position/global", NavSatFix, gps_callback)
    rospy.spin()

if __name__ == '__main__':
    timevar = str(datetime.now().strftime("%m-%d_%H:%M:%S"))
    mypath = os.path.join("/home/kspons/Pictures/dronecapture", timevar)
    os.makedirs(mypath)
    os.chdir(mypath)
    os.makedirs(mypath + "/thermal")
    os.makedirs(mypath + "/ptgrey")
    print("\nImages are being saved at " + mypath + "\nPress Ctrl+C to exit")
    start = time.time()
    main()

def make_video():
	copyfile('/home/kspons/Desktop/Run/make_video', mypath+'/make_video')
	subprocess.call(["chmod", "+x", mypath+'/make_video'])
	print '\n'
	
rospy.on_shutdown(make_video)






